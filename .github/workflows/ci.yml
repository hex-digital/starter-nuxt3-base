name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v3.5.1
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Setup Nuxt application 🥾
        run: |
          cp .github/.env.src src/.env

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v3.0.8
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-v${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-v${{ matrix.node }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn install && yarn --cwd src install

      - name: Run linter 👀
        run: yarn lint

      - name: Run type checking 📚
        run: yarn typecheck

      #- name: Run tests 🧪
      #  run: yarn test

      - name: Build app 🖥
        run: yarn --cwd src build
